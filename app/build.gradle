plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs'
    id 'de.mannodermaus.android-junit5'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.didi.sepatuku"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$navigationVersion")
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.fragment:fragment-ktx:1.5.1"

    // Espreso
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$navigationVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$navigationVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$navigationVersion"

    // Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"

    // Retrofit
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")

    // OkHttp BOM
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.3"))

    // OkHttp artifacts
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'

    // Room
    kapt 'androidx.room:room-compiler:2.4.3'
    implementation 'androidx.room:room-runtime:2.4.3'
    implementation "androidx.room:room-ktx:2.4.3"

    implementation "io.insert-koin:koin-android:$koinVersion"

    // Koin Test
    testImplementation "io.insert-koin:koin-test:$koinVersion"
    testImplementation "io.insert-koin:koin-test-junit4:$koinVersion"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")

    // (Optional) If you also have JUnit 4-based tests
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")

    // Local unit test
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.navigation:navigation-testing:$navigationVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1")
    implementation("org.junit.jupiter:junit-jupiter:5.8.2")
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.5.1'
    testImplementation 'org.mockito:mockito-inline:3.6.0'
    androidTestImplementation("androidx.navigation:navigation-testing:$navigationVersion")

    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
}